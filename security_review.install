<?php

/**
 * @file
 * Install, update and uninstall functions for the security_review module.
 *
 */

/**
 * Implements hook_enable().
 */
function security_review_enable() {
  backdrop_set_message(t('Security Review module enabled. You should first set the module access permissions at !link. Be sure to grant permissions to trusted users only as this module can show sensitive site information.', array('!link' => l('admin/people/permissions', 'admin/people/permissions'))));
}

/**
 * Implements hook_schema().
 */
function security_review_schema() {
  $schema['security_review'] = array(
    'fields' => array(
      'namespace' => array(
        'type' => 'varchar',
        'length' => 160,
        'not null' => TRUE,
        'default' => '',
      ),
      'reviewcheck' => array(
        'type' => 'varchar',
        'length' => 160,
        'not null' => TRUE,
        'default' => '',
      ),
      'result' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'lastrun' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'skip' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'skiptime' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'skipuid' => array(
        'type' => 'int',
        'default' => NULL,
      ),
    ),
    'primary key' => array('namespace', 'reviewcheck'),
  );

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function security_review_requirements($phase) {

  $requirements = array();

  switch ($phase) {
    case 'runtime':
      $failed_checks = FALSE;
      $checks = security_review_get_stored_results();
      foreach ($checks as $check) {
        if ($check['result'] === FALSE && !$check['skip']) {
          $failed_checks = TRUE;
          break;
        }
      }
      $url = url('admin/reports/security-review');
      if (empty($checks)) {
        $severity = REQUIREMENT_WARNING;
        $value = t('The Security Review checklist has not been run. <a href="!url">Run the checklist</a>', array('!url' => $url));
      }
      elseif ($failed_checks) {
        $severity = REQUIREMENT_WARNING;
        $value = t('There are failed Security Review checks. <a href="!url">Review the checklist</a>', array('!url' => $url));
      }
      else {
        $severity = REQUIREMENT_OK;
        $value = t('Passing all non-ignored Security Review checks. <a href="!url">Review the checklist</a>', array('!url' => $url));
      }
      $requirements['security_review'] = array(
        'title' => t('Security Review'),
        'severity' => $severity,
        'value' => $value,
      );
      break;
  }

  return $requirements;
}

/**
 * Implements hook_update_last_removed().
 */
function security_review_update_last_removed() {
  return 7000;
}

/**
 * Update Drupal 7 variables to Backdrop.
 */
function security_review_update_1000() {
  $config = config('security_review.settings');
  $config->set('security_review_known_risky_fields', update_variable_get('security_review_known_risky_fields', ''));
  $config->set('check_settings.security_review_base_url_method', update_variable_get('security_review_base_url_method', 'token'));
  $config->set('security_review_untrusted_roles', update_variable_get('security_review_untrusted_roles', array(BACKDROP_AUTHENTICATED_ROLE, BACKDROP_ANONYMOUS_ROLE)));
  $config->set('security_review_log', update_variable_get('security_review_log', 'TRUE'));
  $config->save();

  state_set('security_review_last_run', update_variable_get('security_review_last_run', ''));

  update_variable_del('security_review_known_risky_fields');
  update_variable_del('security_review_base_url_method');
  update_variable_del('security_review_untrusted_roles');
  update_variable_del('security_review_log');
  update_variable_del('security_review_last_run');
}

/**
 * Implements hook_install().
 */
function security_review_install() {
  // Dynamically generated variable data was detected.
  // /security_review/security_review.pages.inc line 143
}
